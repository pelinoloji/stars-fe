{"ast":null,"code":"var _jsxFileName = \"/Users/pelindiskan/Code/stars-fe/src/App.js\";\nimport React, { useState } from 'react';\nimport { TextField } from '@material-ui/core';\nimport StarWrapper from './components/starWrapper';\n\nfunction App() {\n  return React.createElement(\"div\", {\n    className: \"StarApp\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 8\n    },\n    __self: this\n  }, React.createElement(\"ol\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 9\n    },\n    __self: this\n  }, React.createElement(\"li\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10\n    },\n    __self: this\n  }, \"Show the number of empty stars equal to the number provided in the input.\"), React.createElement(\"li\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11\n    },\n    __self: this\n  }, \"On hover, all stars up until the point of the cursor should be lit.\"), React.createElement(\"li\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12\n    },\n    __self: this\n  }, \"On click, the value should be stored in the state value \\\"clickedStarCount\\\", and the UI view persisted.\")), React.createElement(TextField, {\n    id: \"star-count\",\n    label: \"Number of Stars\",\n    margin: \"normal\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15\n    },\n    __self: this\n  }), React.createElement(StarWrapper, {\n    starCount: 3,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20\n    },\n    __self: this\n  }));\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/pelindiskan/Code/stars-fe/src/App.js"],"names":["React","useState","TextField","StarWrapper","App"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,SAAT,QAA0B,mBAA1B;AACA,OAAOC,WAAP,MAAwB,0BAAxB;;AAEA,SAASC,GAAT,GAAe;AAEb,SACE;AAAK,IAAA,SAAS,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iFADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2EAFF,EAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gHAHF,CADF,EAOE,oBAAC,SAAD;AACE,IAAA,EAAE,EAAC,YADL;AAEE,IAAA,KAAK,EAAC,iBAFR;AAGE,IAAA,MAAM,EAAC,QAHT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAPF,EAYE,oBAAC,WAAD;AACE,IAAA,SAAS,EAAE,CADb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAZF,CADF;AAkBD;;AAED,eAAeA,GAAf","sourcesContent":["import React, { useState } from 'react';\nimport { TextField } from '@material-ui/core';\nimport StarWrapper from './components/starWrapper';\n\nfunction App() {\n\n  return (\n    <div className=\"StarApp\">\n      <ol>\n        <li>Show the number of empty stars equal to the number provided in the input.</li>\n        <li>On hover, all stars up until the point of the cursor should be lit.</li>\n        <li>On click, the value should be stored in the state value \"clickedStarCount\", and the UI view persisted.</li>\n      </ol>\n\n      <TextField\n        id=\"star-count\"\n        label=\"Number of Stars\"\n        margin=\"normal\"\n      />\n      <StarWrapper\n        starCount={3}\n      />\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}