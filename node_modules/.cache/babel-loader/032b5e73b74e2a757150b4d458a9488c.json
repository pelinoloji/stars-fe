{"ast":null,"code":"import _slicedToArray from \"/Users/pelindiskan/Code/stars-fe/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/pelindiskan/Code/stars-fe/src/components/starWrapper/index.jsx\";\nimport React, { useState } from 'react';\nimport Star from '../star';\n\nconst StarWrapper = ({\n  starCount\n}) => {\n  const _useState = useState(-1),\n        _useState2 = _slicedToArray(_useState, 2),\n        clickedID = _useState2[0],\n        setClickedID = _useState2[1];\n\n  const _useState3 = useState(-1),\n        _useState4 = _slicedToArray(_useState3, 2),\n        hoveredID = _useState4[0],\n        setHoveredID = _useState4[1];\n\n  const range = number => {\n    return Array.from(new Array(number), (x, i) => i);\n  };\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16\n    },\n    __self: this\n  }, range(starCount).map((starID, index) => {\n    return React.createElement(Star, {\n      key: index,\n      isLit: hoveredID >= starID,\n      onClick: () => setClickedID(index),\n      onHoverIn: () => setHoveredID(index),\n      onHoverOut: () => setHoveredID(-1),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 20\n      },\n      __self: this\n    });\n  }));\n};\n\nexport default StarWrapper;","map":{"version":3,"sources":["/Users/pelindiskan/Code/stars-fe/src/components/starWrapper/index.jsx"],"names":["React","useState","Star","StarWrapper","starCount","clickedID","setClickedID","hoveredID","setHoveredID","range","number","Array","from","x","i","map","starID","index"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,IAAP,MAAiB,SAAjB;;AAEA,MAAMC,WAAW,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAmB;AAAA,oBAEHH,QAAQ,CAAC,CAAC,CAAF,CAFL;AAAA;AAAA,QAE9BI,SAF8B;AAAA,QAEnBC,YAFmB;;AAAA,qBAGHL,QAAQ,CAAC,CAAC,CAAF,CAHL;AAAA;AAAA,QAG9BM,SAH8B;AAAA,QAGnBC,YAHmB;;AAKrC,QAAMC,KAAK,GAAIC,MAAD,IAAY;AACxB,WACEC,KAAK,CAACC,IAAN,CAAW,IAAID,KAAJ,CAAUD,MAAV,CAAX,EAA8B,CAACG,CAAD,EAAIC,CAAJ,KAAUA,CAAxC,CADF;AAEI,GAHN;;AAMA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGL,KAAK,CAACL,SAAD,CAAL,CAAiBW,GAAjB,CAAqB,CAACC,MAAD,EAASC,KAAT,KAAmB;AAEvC,WACE,oBAAC,IAAD;AACE,MAAA,GAAG,EAAEA,KADP;AAEE,MAAA,KAAK,EAAEV,SAAS,IAAIS,MAFtB;AAGE,MAAA,OAAO,EAAE,MAAMV,YAAY,CAACW,KAAD,CAH7B;AAIE,MAAA,SAAS,EAAE,MACTT,YAAY,CAACS,KAAD,CALhB;AAOE,MAAA,UAAU,EAAE,MACVT,YAAY,CAAC,CAAC,CAAF,CARhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF;AAcD,GAhBA,CADH,CADF;AAqBD,CAhCD;;AAkCA,eAAeL,WAAf","sourcesContent":["import React, { useState } from 'react';\nimport Star from '../star';\n\nconst StarWrapper = ({ starCount }) => {\n\n  const [clickedID, setClickedID] = useState(-1);\n  const [hoveredID, setHoveredID] = useState(-1);\n\n  const range = (number) => {\n    return(     \n      Array.from(new Array(number), (x, i) => i)\n      )}\n\n    \n  return (\n    <div>\n      {range(starCount).map((starID, index) => {\n        \n        return (\n          <Star\n            key={index}\n            isLit={hoveredID >= starID}\n            onClick={() => setClickedID(index)}\n            onHoverIn={()=>\n              setHoveredID(index)\n            }\n            onHoverOut={()=>\n              setHoveredID(-1)\n            }\n\n          />\n        )\n      })}\n    </div>\n  )\n}\n\nexport default StarWrapper;"]},"metadata":{},"sourceType":"module"}