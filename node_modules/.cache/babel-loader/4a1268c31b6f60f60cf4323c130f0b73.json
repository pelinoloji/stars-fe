{"ast":null,"code":"import _slicedToArray from \"/Users/pelindiskan/Code/stars-fe/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/pelindiskan/Code/stars-fe/src/components/starWrapper/index.jsx\";\nimport React, { useState } from 'react';\nimport Star from '../star';\n\nconst range = number => Array.from(new Array(number), (x, i) => i);\n\nconst StarWrapper = ({\n  starCount,\n  count\n}) => {\n  const _useState = useState(0),\n        _useState2 = _slicedToArray(_useState, 2),\n        clickedID = _useState2[0],\n        setClickedID = _useState2[1];\n\n  const _useState3 = useState(0),\n        _useState4 = _slicedToArray(_useState3, 2),\n        hoveredID = _useState4[0],\n        setHoveredID = _useState4[1];\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14\n    },\n    __self: this\n  }, range(starCount).map((star, index) => {\n    return React.createElement(Star, {\n      key: index,\n      isLit: star === clicked,\n      onClick: () => setClicked(clicked),\n      onHoverIn: () => setHovered(index),\n      onHoverOut: () => setHovered(0),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 18\n      },\n      __self: this\n    });\n  }));\n};\n\nexport default StarWrapper;","map":{"version":3,"sources":["/Users/pelindiskan/Code/stars-fe/src/components/starWrapper/index.jsx"],"names":["React","useState","Star","range","number","Array","from","x","i","StarWrapper","starCount","count","clickedID","setClickedID","hoveredID","setHoveredID","map","star","index","clicked","setClicked","setHovered"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,IAAP,MAAiB,SAAjB;;AAEA,MAAMC,KAAK,GAAIC,MAAD,IACZC,KAAK,CAACC,IAAN,CAAW,IAAID,KAAJ,CAAUD,MAAV,CAAX,EAA8B,CAACG,CAAD,EAAIC,CAAJ,KAAUA,CAAxC,CADF;;AAIA,MAAMC,WAAW,GAAG,CAAC;AAAEC,EAAAA,SAAF;AAAaC,EAAAA;AAAb,CAAD,KAA0B;AAAA,oBAEVV,QAAQ,CAAC,CAAD,CAFE;AAAA;AAAA,QAErCW,SAFqC;AAAA,QAE1BC,YAF0B;;AAAA,qBAGVZ,QAAQ,CAAC,CAAD,CAHE;AAAA;AAAA,QAGrCa,SAHqC;AAAA,QAG1BC,YAH0B;;AAK5C,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGZ,KAAK,CAACO,SAAD,CAAL,CAAiBM,GAAjB,CAAqB,CAACC,IAAD,EAAOC,KAAP,KAAiB;AAErC,WACE,oBAAC,IAAD;AACE,MAAA,GAAG,EAAEA,KADP;AAEE,MAAA,KAAK,EAAED,IAAI,KAAKE,OAFlB;AAGE,MAAA,OAAO,EAAE,MAAMC,UAAU,CAACD,OAAD,CAH3B;AAIE,MAAA,SAAS,EAAE,MAAIE,UAAU,CAACH,KAAD,CAJ3B;AAKE,MAAA,UAAU,EAAE,MAAIG,UAAU,CAAC,CAAD,CAL5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF;AAUD,GAZA,CADH,CADF;AAiBD,CAtBD;;AAwBA,eAAeZ,WAAf","sourcesContent":["import React, { useState } from 'react';\nimport Star from '../star';\n\nconst range = (number) => \n  Array.from(new Array(number), (x, i) => i)\n\n\nconst StarWrapper = ({ starCount, count }) => {\n\n  const [clickedID, setClickedID] = useState(0);\n  const [hoveredID, setHoveredID] = useState(0);\n\n  return (\n    <div>\n      {range(starCount).map((star, index) => {\n\n        return (\n          <Star\n            key={index}\n            isLit={star === clicked}\n            onClick={() => setClicked(clicked)}\n            onHoverIn={()=>setHovered(index)}\n            onHoverOut={()=>setHovered(0)}\n\n          />\n        )\n      })}\n    </div>\n  )\n}\n\nexport default StarWrapper;"]},"metadata":{},"sourceType":"module"}