{"ast":null,"code":"import _slicedToArray from \"/Users/pelindiskan/Code/stars-fe/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/pelindiskan/Code/stars-fe/src/App.js\";\nimport React, { useState } from \"react\";\nimport { TextField } from \"@material-ui/core\";\nimport StarWrapper from \"./components/starWrapper\";\n\nfunction App() {\n  const _useState = useState(0),\n        _useState2 = _slicedToArray(_useState, 2),\n        count = _useState2[0],\n        setCount = _useState2[1];\n\n  const handleCount = e => {\n    setCount(Number(e.target.value));\n  };\n\n  return React.createElement(\"div\", {\n    className: \"StarApp\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13\n    },\n    __self: this\n  }, React.createElement(\"ol\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14\n    },\n    __self: this\n  }, React.createElement(\"li\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15\n    },\n    __self: this\n  }, \"Show the number of empty stars equal to the number provided in the input.\"), React.createElement(\"li\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19\n    },\n    __self: this\n  }, \"On hover, all stars up until the point of the cursor should be lit.\"), React.createElement(\"li\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22\n    },\n    __self: this\n  }, \"On click, the value should be stored in the state value \\\"clickedStarCount\\\", and the UI view persisted.\")), React.createElement(TextField, {\n    id: \"star-count\",\n    label: \"Number of Stars\",\n    margin: \"normal\",\n    value: count,\n    onChange: handleCount,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28\n    },\n    __self: this\n  }), React.createElement(StarWrapper, {\n    starCount: starCount,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  }));\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/pelindiskan/Code/stars-fe/src/App.js"],"names":["React","useState","TextField","StarWrapper","App","count","setCount","handleCount","e","Number","target","value","starCount"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,SAAT,QAA0B,mBAA1B;AACA,OAAOC,WAAP,MAAwB,0BAAxB;;AAEA,SAASC,GAAT,GAAe;AAAA,oBACaH,QAAQ,CAAC,CAAD,CADrB;AAAA;AAAA,QACNI,KADM;AAAA,QACCC,QADD;;AAGb,QAAMC,WAAW,GAAIC,CAAD,IAAO;AACzBF,IAAAA,QAAQ,CAACG,MAAM,CAACD,CAAC,CAACE,MAAF,CAASC,KAAV,CAAP,CAAR;AACD,GAFD;;AAIA,SACE;AAAK,IAAA,SAAS,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iFADF,EAKE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2EALF,EAQE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gHARF,CADF,EAeE,oBAAC,SAAD;AACE,IAAA,EAAE,EAAC,YADL;AAEE,IAAA,KAAK,EAAC,iBAFR;AAGE,IAAA,MAAM,EAAC,QAHT;AAIE,IAAA,KAAK,EAAEN,KAJT;AAKE,IAAA,QAAQ,EAAEE,WALZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAfF,EAsBE,oBAAC,WAAD;AAAa,IAAA,SAAS,EAAEK,SAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAtBF,CADF;AA0BD;;AAED,eAAeR,GAAf","sourcesContent":["import React, { useState } from \"react\";\nimport { TextField } from \"@material-ui/core\";\nimport StarWrapper from \"./components/starWrapper\";\n\nfunction App() {\n  const [count, setCount] = useState(0);\n\n  const handleCount = (e) => {\n    setCount(Number(e.target.value));\n  };\n\n  return (\n    <div className=\"StarApp\">\n      <ol>\n        <li>\n          Show the number of empty stars equal to the number provided in the\n          input.\n        </li>\n        <li>\n          On hover, all stars up until the point of the cursor should be lit.\n        </li>\n        <li>\n          On click, the value should be stored in the state value\n          \"clickedStarCount\", and the UI view persisted.\n        </li>\n      </ol>\n\n      <TextField\n        id=\"star-count\"\n        label=\"Number of Stars\"\n        margin=\"normal\"\n        value={count}\n        onChange={handleCount}\n      />\n      <StarWrapper starCount={starCount} />\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}