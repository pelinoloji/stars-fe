{"ast":null,"code":"import _slicedToArray from \"/Users/pelindiskan/Code/stars-fe/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/pelindiskan/Code/stars-fe/src/App.js\";\nimport React, { useState } from 'react';\nimport { TextField } from '@material-ui/core';\nimport StarWrapper from './components/starWrapper';\n\nfunction App() {\n  const _useState = useState(0),\n        _useState2 = _slicedToArray(_useState, 2),\n        count = _useState2[0],\n        setCount = _useState2[1];\n\n  const _useState3 = useState(0),\n        _useState4 = _slicedToArray(_useState3, 2),\n        hover = _useState4[0],\n        setHover = _useState4[1];\n\n  const _useState5 = useState(0),\n        _useState6 = _slicedToArray(_useState5, 2),\n        clicked = _useState6[0],\n        setClicked = _useState6[1];\n\n  const handleCount = e => {\n    setCount(Number(e.target.value));\n  };\n\n  return React.createElement(\"div\", {\n    className: \"StarApp\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17\n    },\n    __self: this\n  }, React.createElement(\"ol\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18\n    },\n    __self: this\n  }, React.createElement(\"li\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19\n    },\n    __self: this\n  }, \"Show the number of empty stars equal to the number provided in the input.\"), React.createElement(\"li\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20\n    },\n    __self: this\n  }, \"On hover, all stars up until the point of the cursor should be lit.\"), React.createElement(\"li\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21\n    },\n    __self: this\n  }, \"On click, the value should be stored in the state value \\\"clickedStarCount\\\", and the UI view persisted.\")), React.createElement(TextField, {\n    id: \"star-count\",\n    label: \"Number of Stars\",\n    margin: \"normal\",\n    value: count,\n    onChange: handleCount,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24\n    },\n    __self: this\n  }), React.createElement(StarWrapper, {\n    starCount: count,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  }));\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/pelindiskan/Code/stars-fe/src/App.js"],"names":["React","useState","TextField","StarWrapper","App","count","setCount","hover","setHover","clicked","setClicked","handleCount","e","Number","target","value"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,SAAT,QAA0B,mBAA1B;AACA,OAAOC,WAAP,MAAwB,0BAAxB;;AAEA,SAASC,GAAT,GAAe;AAAA,oBAEUH,QAAQ,CAAC,CAAD,CAFlB;AAAA;AAAA,QAENI,KAFM;AAAA,QAEAC,QAFA;;AAAA,qBAGUL,QAAQ,CAAC,CAAD,CAHlB;AAAA;AAAA,QAGNM,KAHM;AAAA,QAGAC,QAHA;;AAAA,qBAIcP,QAAQ,CAAC,CAAD,CAJtB;AAAA;AAAA,QAINQ,OAJM;AAAA,QAIEC,UAJF;;AAOb,QAAMC,WAAW,GAAIC,CAAD,IAAO;AACzBN,IAAAA,QAAQ,CAACO,MAAM,CAACD,CAAC,CAACE,MAAF,CAASC,KAAV,CAAP,CAAR;AACH,GAFC;;AAIA,SACE;AAAK,IAAA,SAAS,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iFADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2EAFF,EAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gHAHF,CADF,EAOE,oBAAC,SAAD;AACE,IAAA,EAAE,EAAC,YADL;AAEE,IAAA,KAAK,EAAC,iBAFR;AAGE,IAAA,MAAM,EAAC,QAHT;AAIE,IAAA,KAAK,EAAEV,KAJT;AAKE,IAAA,QAAQ,EAAEM,WALZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAPF,EAcE,oBAAC,WAAD;AACE,IAAA,SAAS,EAAEN,KADb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAdF,CADF;AAoBD;;AAED,eAAeD,GAAf","sourcesContent":["import React, { useState } from 'react';\nimport { TextField } from '@material-ui/core';\nimport StarWrapper from './components/starWrapper';\n\nfunction App() {\n\n  const [count,setCount]=useState(0);\n  const [hover,setHover]=useState(0);\n  const [clicked,setClicked]=useState(0);\n\n\n  const handleCount = (e) => {\n    setCount(Number(e.target.value))\n}\n\n  return (\n    <div className=\"StarApp\">\n      <ol>\n        <li>Show the number of empty stars equal to the number provided in the input.</li>\n        <li>On hover, all stars up until the point of the cursor should be lit.</li>\n        <li>On click, the value should be stored in the state value \"clickedStarCount\", and the UI view persisted.</li>\n      </ol>\n\n      <TextField\n        id=\"star-count\"\n        label=\"Number of Stars\"\n        margin=\"normal\"\n        value={count}\n        onChange={handleCount}\n      />\n      <StarWrapper\n        starCount={count}\n      />\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}